{"id":"KniQ","dependencies":[{"name":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\package.json","includedInParent":true,"mtime":1750141916701},{"name":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\package.json","includedInParent":true,"mtime":1749531474589}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VERSION = void 0;\nexports.abstract = abstract;\nexports.getUid = getUid;\n/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nfunction abstract() {\n  return /** @type {?} */function () {\n    throw new Error('Unimplemented abstract method.');\n  }();\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nfunction getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nvar VERSION = exports.VERSION = '6.4.3';"},"sourceMaps":null,"error":null,"hash":"bb63417ae6304dd4c2772462148953e9","cacheData":{"env":{}}}