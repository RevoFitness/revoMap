{"id":"H38a","dependencies":[{"name":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\package.json","includedInParent":true,"mtime":1750141916701},{"name":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\package.json","includedInParent":true,"mtime":1749531474589},{"name":"../Object.js","loc":{"line":17,"column":23,"index":645},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\source\\Source.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\Object.js"},{"name":"./State.js","loc":{"line":18,"column":24,"index":685},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\source\\Source.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\source\\State.js"},{"name":"../util.js","loc":{"line":19,"column":25,"index":724},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\source\\Source.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\util.js"},{"name":"../proj.js","loc":{"line":20,"column":37,"index":775},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\source\\Source.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\proj.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _Object = _interopRequireDefault(require(\"../Object.js\"));\nvar _State = _interopRequireDefault(require(\"./State.js\"));\nvar _util = require(\"../util.js\");\nvar _proj = require(\"../proj.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nvar __extends = void 0 && (void 0).__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/source/Source\n */\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */function (_super) {\n  __extends(Source, _super);\n  /**\n   * @param {Options} options Source options.\n   */\n  function Source(options) {\n    var _this = _super.call(this) || this;\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    _this.projection_ = (0, _proj.get)(options.projection);\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    _this.attributions_ = adaptAttributions(options.attributions);\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ? options.attributionsCollapsible : true;\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    _this.loading = false;\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    _this.state_ = options.state !== undefined ? options.state : _State.default.READY;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n    return _this;\n  }\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function () {\n    return this.attributions_;\n  };\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function () {\n    return this.attributionsCollapsible_;\n  };\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function () {\n    return this.projection_;\n  };\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function () {\n    return (0, _util.abstract)();\n  };\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  Source.prototype.getState = function () {\n    return this.state_;\n  };\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function () {\n    return this.wrapX_;\n  };\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  Source.prototype.getContextOptions = function () {\n    return undefined;\n  };\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  Source.prototype.refresh = function () {\n    this.changed();\n  };\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  Source.prototype.setState = function (state) {\n    this.state_ = state;\n    this.changed();\n  };\n  return Source;\n}(_Object.default);\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\nvar _default = exports.default = Source;"},"sourceMaps":null,"error":null,"hash":"505de79be4ac2364ef0f658502077b65","cacheData":{"env":{}}}