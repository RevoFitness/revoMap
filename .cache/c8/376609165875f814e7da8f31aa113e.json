{"id":"node_modules/base-64/base64.js","dependencies":[{"name":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\package.json","includedInParent":true,"mtime":1750126628717},{"name":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\base-64\\package.json","includedInParent":true,"mtime":1750125351539}],"generated":{"js":"var global = arguments[3];\nvar define;\n/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/base-64/base64.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/base-64/base64.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}}],"sources":{"node_modules/base-64/base64.js":"/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n"},"lineCount":168}},"error":null,"hash":"eca2a149985e4a5806d8866f347bf9ec","cacheData":{"env":{}}}