{"id":"SCyv","dependencies":[{"name":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\package.json","includedInParent":true,"mtime":1750141916701},{"name":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\package.json","includedInParent":true,"mtime":1749531474589}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UNSIGNED_SHORT = exports.UNSIGNED_INT = exports.UNSIGNED_BYTE = exports.STREAM_DRAW = exports.STATIC_DRAW = exports.FLOAT = exports.ELEMENT_ARRAY_BUFFER = exports.DYNAMIC_DRAW = exports.ARRAY_BUFFER = void 0;\nexports.getContext = getContext;\nexports.getSupportedExtensions = getSupportedExtensions;\n/**\n * @module ol/webgl\n */\n/**\n * Constants taken from goog.webgl\n */\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nvar ARRAY_BUFFER = exports.ARRAY_BUFFER = 0x8892;\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nvar ELEMENT_ARRAY_BUFFER = exports.ELEMENT_ARRAY_BUFFER = 0x8893;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nvar STREAM_DRAW = exports.STREAM_DRAW = 0x88e0;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nvar STATIC_DRAW = exports.STATIC_DRAW = 0x88e4;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nvar DYNAMIC_DRAW = exports.DYNAMIC_DRAW = 0x88e8;\n/**\n * @const\n * @type {number}\n */\nvar UNSIGNED_BYTE = exports.UNSIGNED_BYTE = 0x1401;\n/**\n * @const\n * @type {number}\n */\nvar UNSIGNED_SHORT = exports.UNSIGNED_SHORT = 0x1403;\n/**\n * @const\n * @type {number}\n */\nvar UNSIGNED_INT = exports.UNSIGNED_INT = 0x1405;\n/**\n * @const\n * @type {number}\n */\nvar FLOAT = exports.FLOAT = 0x1406;\n/** end of goog.webgl constants\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nfunction getContext(canvas, opt_attributes) {\n  var ii = CONTEXT_IDS.length;\n  for (var i = 0; i < ii; ++i) {\n    try {\n      var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */context;\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n/**\n * @type {Array<string>}\n */\nvar supportedExtensions;\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nfunction getSupportedExtensions() {\n  if (!supportedExtensions) {\n    var canvas = document.createElement('canvas');\n    var gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}"},"sourceMaps":null,"error":null,"hash":"f65db4682b5b369b346700008337939c","cacheData":{"env":{}}}