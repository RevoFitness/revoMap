{"id":"XCOy","dependencies":[{"name":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\package.json","includedInParent":true,"mtime":1750141916701},{"name":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\package.json","includedInParent":true,"mtime":1749531474589},{"name":"../events/Target.js","loc":{"line":17,"column":24,"index":648},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\style\\IconImage.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\events\\Target.js"},{"name":"../events/EventType.js","loc":{"line":18,"column":22,"index":693},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\style\\IconImage.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\events\\EventType.js"},{"name":"../ImageState.js","loc":{"line":19,"column":23,"index":742},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\style\\IconImage.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\ImageState.js"},{"name":"../dom.js","loc":{"line":20,"column":38,"index":800},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\style\\IconImage.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\dom.js"},{"name":"./IconImageCache.js","loc":{"line":21,"column":41,"index":854},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\style\\IconImage.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\style\\IconImageCache.js"},{"name":"../Image.js","loc":{"line":22,"column":28,"index":905},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\style\\IconImage.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\Image.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.get = get;\nvar _Target = _interopRequireDefault(require(\"../events/Target.js\"));\nvar _EventType = _interopRequireDefault(require(\"../events/EventType.js\"));\nvar _ImageState = _interopRequireDefault(require(\"../ImageState.js\"));\nvar _dom = require(\"../dom.js\");\nvar _IconImageCache = require(\"./IconImageCache.js\");\nvar _Image = require(\"../Image.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * @module ol/style/IconImage\n */\nvar __extends = void 0 && (void 0).__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */function (_super) {\n  __extends(IconImage, _super);\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n    var _this = _super.call(this) || this;\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    _this.hitDetectionImage_ = null;\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    _this.image_ = !image ? new Image() : image;\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */_this.image_.crossOrigin = crossOrigin;\n    }\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    _this.canvas_ = {};\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    _this.color_ = color;\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    _this.unlisten_ = null;\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    _this.imageState_ = imageState;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    _this.size_ = size;\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    _this.src_ = src;\n    /**\n     * @private\n     */\n    _this.tainted_;\n    return _this;\n  }\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  IconImage.prototype.isTainted_ = function () {\n    if (this.tainted_ === undefined && this.imageState_ === _ImageState.default.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = (0, _dom.createCanvasContext2D)(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  };\n  /**\n   * @private\n   */\n  IconImage.prototype.dispatchChangeEvent_ = function () {\n    this.dispatchEvent(_EventType.default.CHANGE);\n  };\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageError_ = function () {\n    this.imageState_ = _ImageState.default.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageLoad_ = function () {\n    this.imageState_ = _ImageState.default.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  IconImage.prototype.getImage = function (pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  };\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  IconImage.prototype.getPixelRatio = function (pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  };\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  IconImage.prototype.getImageState = function () {\n    return this.imageState_;\n  };\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  IconImage.prototype.getHitDetectionImage = function () {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = (0, _dom.createCanvasContext2D)(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  };\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  IconImage.prototype.getSize = function () {\n    return this.size_;\n  };\n  /**\n   * @return {string|undefined} Image src.\n   */\n  IconImage.prototype.getSrc = function () {\n    return this.src_;\n  };\n  /**\n   * Load not yet loaded URI.\n   */\n  IconImage.prototype.load = function () {\n    if (this.imageState_ == _ImageState.default.IDLE) {\n      this.imageState_ = _ImageState.default.LOADING;\n      try {\n        /** @type {HTMLImageElement} */this.image_.src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = (0, _Image.listenImage)(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n    }\n  };\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  IconImage.prototype.replaceColor_ = function (pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n    var canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n    var ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n    if (this.isTainted_()) {\n      // If reading from the canvas throws a SecurityError the same effect can be\n      // achieved with globalCompositeOperation.\n      // This could be used as the default, but it is not fully supported by all\n      // browsers. E. g. Internet Explorer 11 does not support the multiply\n      // operation and the resulting image shape will be completelly filled with\n      // the provided color.\n      // So this is only used as a fallback. It is still better than having no icon\n      // at all.\n      var c = this.color_;\n      ctx.globalCompositeOperation = 'multiply';\n      ctx.fillStyle = 'rgb(' + c[0] + ',' + c[1] + ',' + c[2] + ')';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n      return;\n    }\n    var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  };\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  IconImage.prototype.unlistenImage_ = function () {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  };\n  return IconImage;\n}(_Target.default);\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nfunction get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = _IconImageCache.shared.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    _IconImageCache.shared.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\nvar _default = exports.default = IconImage;"},"sourceMaps":null,"error":null,"hash":"58de6f2b1eada427a6a7650e67579c64","cacheData":{"env":{}}}