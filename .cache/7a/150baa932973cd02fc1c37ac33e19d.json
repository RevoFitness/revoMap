{"id":"X4ix","dependencies":[{"name":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\package.json","includedInParent":true,"mtime":1750141916701},{"name":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\package.json","includedInParent":true,"mtime":1749531474589},{"name":"./events/Event.js","loc":{"line":17,"column":22,"index":642},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\Geolocation.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\events\\Event.js"},{"name":"./Object.js","loc":{"line":18,"column":47,"index":710},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\Geolocation.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\Object.js"},{"name":"./events/EventType.js","loc":{"line":19,"column":22,"index":747},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\Geolocation.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\events\\EventType.js"},{"name":"./geom/Polygon.js","loc":{"line":20,"column":44,"index":816},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\Geolocation.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\geom\\Polygon.js"},{"name":"./proj.js","loc":{"line":21,"column":86,"index":923},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\Geolocation.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\proj.js"},{"name":"./math.js","loc":{"line":22,"column":26,"index":962},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\Geolocation.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\math.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _Event = _interopRequireDefault(require(\"./events/Event.js\"));\nvar _Object = _interopRequireWildcard(require(\"./Object.js\"));\nvar _EventType = _interopRequireDefault(require(\"./events/EventType.js\"));\nvar _Polygon = require(\"./geom/Polygon.js\");\nvar _proj = require(\"./proj.js\");\nvar _math = require(\"./math.js\");\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nvar __extends = void 0 && (void 0).__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/Geolocation\n */\n\n/**\n * @enum {string}\n */\nvar Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n/**\n * @classdesc\n * Events emitted on Geolocation error.\n */\nvar GeolocationError = /** @class */function (_super) {\n  __extends(GeolocationError, _super);\n  /**\n   * @param {PositionError} error error object.\n   */\n  function GeolocationError(error) {\n    var _this = _super.call(this, _EventType.default.ERROR) || this;\n    /**\n     * @type {number}\n     */\n    _this.code = error.code;\n    /**\n     * @type {string}\n     */\n    _this.message = error.message;\n    return _this;\n  }\n  return GeolocationError;\n}(_Event.default);\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nvar Geolocation = /** @class */function (_super) {\n  __extends(Geolocation, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function Geolocation(opt_options) {\n    var _this = _super.call(this) || this;\n    var options = opt_options || {};\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    _this.position_ = null;\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    _this.transform_ = _proj.identityTransform;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.watchId_ = undefined;\n    _this.addEventListener((0, _Object.getChangeEventType)(Property.PROJECTION), _this.handleProjectionChanged_);\n    _this.addEventListener((0, _Object.getChangeEventType)(Property.TRACKING), _this.handleTrackingChanged_);\n    if (options.projection !== undefined) {\n      _this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      _this.setTrackingOptions(options.trackingOptions);\n    }\n    _this.setTracking(options.tracking !== undefined ? options.tracking : false);\n    return _this;\n  }\n  /**\n   * Clean up.\n   */\n  Geolocation.prototype.disposeInternal = function () {\n    this.setTracking(false);\n    _super.prototype.disposeInternal.call(this);\n  };\n  /**\n   * @private\n   */\n  Geolocation.prototype.handleProjectionChanged_ = function () {\n    var projection = this.getProjection();\n    if (projection) {\n      this.transform_ = (0, _proj.getTransformFromProjections)((0, _proj.get)('EPSG:4326'), projection);\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  Geolocation.prototype.handleTrackingChanged_ = function () {\n    if ('geolocation' in navigator) {\n      var tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(this.positionChange_.bind(this), this.positionError_.bind(this), this.getTrackingOptions());\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {Position} position position event.\n   */\n  Geolocation.prototype.positionChange_ = function (position) {\n    var coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(Property.ALTITUDE, coords.altitude === null ? undefined : coords.altitude);\n    this.set(Property.ALTITUDE_ACCURACY, coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy);\n    this.set(Property.HEADING, coords.heading === null ? undefined : (0, _math.toRadians)(coords.heading));\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    var projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition);\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    var geometry = (0, _Polygon.circular)(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  };\n  /**\n   * @private\n   * @param {PositionError} error error object.\n   */\n  Geolocation.prototype.positionError_ = function (error) {\n    this.dispatchEvent(new GeolocationError(error));\n  };\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAccuracy = function () {\n    return /** @type {number|undefined} */this.get(Property.ACCURACY);\n  };\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAccuracyGeometry = function () {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */this.get(Property.ACCURACY_GEOMETRY) || null;\n  };\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAltitude = function () {\n    return /** @type {number|undefined} */this.get(Property.ALTITUDE);\n  };\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAltitudeAccuracy = function () {\n    return /** @type {number|undefined} */this.get(Property.ALTITUDE_ACCURACY);\n  };\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getHeading = function () {\n    return /** @type {number|undefined} */this.get(Property.HEADING);\n  };\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getPosition = function () {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */this.get(Property.POSITION);\n  };\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getProjection = function () {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */this.get(Property.PROJECTION);\n  };\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getSpeed = function () {\n    return /** @type {number|undefined} */this.get(Property.SPEED);\n  };\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getTracking = function () {\n    return /** @type {boolean} */this.get(Property.TRACKING);\n  };\n  /**\n   * Get the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getTrackingOptions = function () {\n    return /** @type {PositionOptions|undefined} */this.get(Property.TRACKING_OPTIONS);\n  };\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setProjection = function (projection) {\n    this.set(Property.PROJECTION, (0, _proj.get)(projection));\n  };\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setTracking = function (tracking) {\n    this.set(Property.TRACKING, tracking);\n  };\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setTrackingOptions = function (options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  };\n  return Geolocation;\n}(_Object.default);\nvar _default = exports.default = Geolocation;"},"sourceMaps":null,"error":null,"hash":"f83c4ae9a684e5441c9e0dc0f049be4e","cacheData":{"env":{}}}