{"id":"W4Y0","dependencies":[{"name":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\package.json","includedInParent":true,"mtime":1750141916701},{"name":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\package.json","includedInParent":true,"mtime":1749531474589},{"name":"./Control.js","loc":{"line":17,"column":20,"index":649},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\control\\ZoomToExtent.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\control\\Control.js"},{"name":"../events/EventType.js","loc":{"line":18,"column":22,"index":687},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\control\\ZoomToExtent.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\events\\EventType.js"},{"name":"../css.js","loc":{"line":19,"column":50,"index":763},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\control\\ZoomToExtent.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\css.js"},{"name":"../geom/Polygon.js","loc":{"line":20,"column":48,"index":824},"parent":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\control\\ZoomToExtent.js","resolved":"C:\\Users\\MathewBowyer\\Downloads\\open_layers_map-main\\node_modules\\ol\\geom\\Polygon.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _Control = _interopRequireDefault(require(\"./Control.js\"));\nvar _EventType = _interopRequireDefault(require(\"../events/EventType.js\"));\nvar _css = require(\"../css.js\");\nvar _Polygon = require(\"../geom/Polygon.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nvar __extends = void 0 && (void 0).__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/control/ZoomToExtent\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nvar ZoomToExtent = /** @class */function (_super) {\n  __extends(ZoomToExtent, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function ZoomToExtent(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    }) || this;\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @protected\n     */\n    _this.extent = options.extent ? options.extent : null;\n    var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n    var label = options.label !== undefined ? options.label : 'E';\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(typeof label === 'string' ? document.createTextNode(label) : label);\n    button.addEventListener(_EventType.default.CLICK, _this.handleClick_.bind(_this), false);\n    var cssClasses = className + ' ' + _css.CLASS_UNSELECTABLE + ' ' + _css.CLASS_CONTROL;\n    var element = _this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n    return _this;\n  }\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  ZoomToExtent.prototype.handleClick_ = function (event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  };\n  /**\n   * @protected\n   */\n  ZoomToExtent.prototype.handleZoomToExtent = function () {\n    var map = this.getMap();\n    var view = map.getView();\n    var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n    view.fitInternal((0, _Polygon.fromExtent)(extent));\n  };\n  return ZoomToExtent;\n}(_Control.default);\nvar _default = exports.default = ZoomToExtent;"},"sourceMaps":null,"error":null,"hash":"c3f3e33b846025e01f9c23343ab4e962","cacheData":{"env":{}}}